@model OnlineMCQ.ViewModels.StartTestViewModel
@{
    ViewData["Title"] = "Online Exam";
}


<div class="container mt-2 mb-5">
    <div class="card shadow-lg rounded-4">
        <div class="card-body mt-5">
            <h3 class="text-center text-primary mb-4 fw-bold">Online MCQ Test</h3>

            <div id="step1">
                <div class="mb-3 row">
                    <label class="col-sm-2 col-form-label">Name</label>
                    <div class="col-sm-4">
                        <input type="text" id="name" class="form-control" required />
                    </div>
                </div>
                <div class="mb-3 row">
                    <label class="col-sm-2 col-form-label">Contact Number</label>
                    <div class="col-sm-4">
                        <input type="text" id="contact" class="form-control" required />

                    </div>
                </div>

                <div class="mb-3">
                    <button class="btn btn-primary" onclick="goToStep2()">Start Exam</button>
                    <a asp-action="Index" asp-controller="Home" class="btn btn-danger">Cancel</a>
                </div>
             
            </div>

          


            <form id="examForm" asp-action="SubmitTest" method="post" style="display:none;">
                @Html.AntiForgeryToken() @* //CSRF *@

                <input type="hidden" name="name" id="hiddenName" />
                <input type="hidden" name="contact" id="hiddenContact" />
                <input type="hidden" name="SubjectId" value="@Model.SubjectId" />
                <input type="hidden" name="LevelId" value="@Model.LevelId" />

                <div id="timer" class="text-danger fw-bold fs-5 text-end mb-3">
                    <i class="bi bi-clock-history me-1"></i><span id="timerText"></span>
                </div>

                @foreach (var question in Model.Questions)
                {
                    <div class="mb-4 border-bottom pb-3">
                        <h5>@Html.Raw(question.QuestionText)</h5>
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="selectedAnswers[@question.QuestionId]" value="1" required>
                            <label class="form-check-label">@Html.Raw(question.OptionA)</label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="selectedAnswers[@question.QuestionId]" value="2" required>
                            <label class="form-check-label">@Html.Raw(question.OptionB)</label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="selectedAnswers[@question.QuestionId]" value="3" required>
                            <label class="form-check-label">@Html.Raw(question.OptionC)</label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="selectedAnswers[@question.QuestionId]" value="4" required>
                            <label class="form-check-label">@Html.Raw(question.OptionD)</label>
                        </div>
                    </div>
                }

                <div class="mb-3">
                    <button type="submit" class="btn btn-primary">Submit</button>
                    <a asp-action="Index" asp-controller="Home" class="btn btn-danger">Cancel</a>
                </div>
               
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>

           let timeLeft = parseInt('@Model.ExamDuration') * 60;
        

            function goToStep2() {
            const name = document.getElementById("name").value;
            const contact = document.getElementById("contact").value;

            if (!name || !contact) {
                alert("Please fill up the Name and Contact Number!");
                return;
            }

            document.getElementById("step1").style.display = "none";
            document.getElementById("examForm").style.display = "block";
            document.getElementById("hiddenName").value = name;
            document.getElementById("hiddenContact").value = contact;

            startTimer();
        }

        function startTimer() {
            const timerText = document.getElementById("timerText");

            const countdown = setInterval(function () {
                let minutes = Math.floor(timeLeft / 60);
                let seconds = timeLeft % 60;
                timerText.innerText = `Time Left: ${minutes}:${seconds.toString().padStart(2, '0')}`;
                timeLeft--;

                if (timeLeft < 0) {
                    clearInterval(countdown);
                    alert("Time is up! Showing results.");
                    document.getElementById("examForm").submit();
                }
            }, 1000);
        }
    </script>
}